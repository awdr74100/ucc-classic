// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Movie {
  id          Int              @id @default(autoincrement())
  title       String           @db.VarChar(20)
  summary     String           @db.VarChar(400)
  posterURLs  String[]         @map("poster_urls")
  runningTime Int              @map("running_time") @db.SmallInt
  releaseDate DateTime         @map("release_date") @db.Date
  genres      Movie_Genre[]
  languages   Movie_Language[]
  actors      Movie_Actor[]
  directors   Movie_Director[]

  @@map("movie")
}

model Genre {
  id     Int           @id @default(autoincrement())
  name   String        @db.VarChar(20)
  movies Movie_Genre[]

  @@map("genre")
}

model Language {
  id     Int              @id @default(autoincrement())
  name   String           @db.VarChar(20)
  movies Movie_Language[]

  @@map("language")
}

model Actor {
  id       Int           @id @default(autoincrement())
  fullName String        @map("full_name") @db.VarChar(40)
  movies   Movie_Actor[]

  @@map("actor")
}

model Director {
  id       Int              @id @default(autoincrement())
  fullName String           @map("full_name") @db.VarChar(40)
  movies   Movie_Director[]

  @@map("director")
}

model Movie_Genre {
  movie   Movie @relation(fields: [movieId], references: [id])
  movieId Int   @map("movie_id")
  genre   Genre @relation(fields: [genreId], references: [id])
  genreId Int   @map("genre_id")

  @@id([movieId, genreId])
  @@map("movie_genre")
}

model Movie_Language {
  movie      Movie    @relation(fields: [movieId], references: [id])
  movieId    Int      @map("movie_id")
  language   Language @relation(fields: [languageId], references: [id])
  languageId Int      @map("language_id")

  @@id([movieId, languageId])
  @@map("movie_language")
}

model Movie_Actor {
  movie   Movie @relation(fields: [movieId], references: [id])
  movieId Int   @map("movie_id")
  actor   Actor @relation(fields: [actorId], references: [id])
  actorId Int   @map("actor_id")

  @@id([movieId, actorId])
  @@map("movie_actor")
}

model Movie_Director {
  movie      Movie    @relation(fields: [movieID], references: [id])
  movieID    Int      @map("movie_id")
  director   Director @relation(fields: [direcotrId], references: [id])
  direcotrId Int      @map("director_id")

  @@id([movieID, direcotrId])
  @@map("movie_director")
}

model Venue {
  id Int @id @default(autoincrement())

  @@map("venue")
}
