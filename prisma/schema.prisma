// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Movie {
  id                     Int                 @id @default(autoincrement())
  title                  String              @db.VarChar(30)
  titleAlternative       String?             @map("title_alternative") @db.VarChar(50)
  description            String              @db.VarChar(400)
  descriptionAlternative String?             @map("description_alternative") @db.VarChar(600)
  posterURLs             String[]            @map("poster_urls")
  trailerURLs            String[]            @map("trailer_urls")
  runningTime            Int                 @map("running_time") @db.SmallInt
  releaseDate            DateTime            @map("release_date") @db.Date
  active                 Boolean             @default(false)
  rating                 Rating              @default(PG12)
  genres                 GenresOnMovies[]
  actors                 ActorsOnMovies[]
  directors              DirectorsOnMovies[]
  languages              LanguagesOnMovies[]

  @@map("movie")
}

enum Rating {
  G
  P
  PG12
  PG15
  R

  @@map("rating")
}

model Genre {
  id              Int              @id @default(autoincrement())
  name            String           @db.VarChar(20)
  nameAlternative String?          @map("name_alternative") @db.VarChar(40)
  movies          GenresOnMovies[]

  @@map("genre")
}

model Actor {
  id              Int              @id @default(autoincrement())
  name            String           @db.VarChar(20)
  nameAlternative String?          @map("name_alternative") @db.VarChar(40)
  movies          ActorsOnMovies[]

  @@map("actor")
}

model Director {
  id              Int                 @id @default(autoincrement())
  name            String              @db.VarChar(20)
  nameAlternative String?             @map("name_alternative") @db.VarChar(40)
  movies          DirectorsOnMovies[]

  @@map("director")
}

model Language {
  id              Int                 @id @default(autoincrement())
  name            String              @db.VarChar(20)
  nameAlternative String?             @map("name_alternative") @db.VarChar(40)
  movies          LanguagesOnMovies[]

  @@map("language")
}

model GenresOnMovies {
  movie   Movie @relation(fields: [movieId], references: [id])
  movieId Int   @map("movie_id")
  genre   Genre @relation(fields: [genreId], references: [id])
  genreId Int   @map("genre_id")

  @@id([movieId, genreId])
  @@map("movie_genre")
}

model ActorsOnMovies {
  movie   Movie @relation(fields: [movieId], references: [id])
  movieId Int   @map("movie_id")
  actor   Actor @relation(fields: [actorId], references: [id])
  actorId Int   @map("actor_id")

  @@id([movieId, actorId])
  @@map("movie_actor")
}

model DirectorsOnMovies {
  movie      Movie    @relation(fields: [movieId], references: [id])
  movieId    Int      @map("movie_id")
  director   Director @relation(fields: [direcotrId], references: [id])
  direcotrId Int      @map("director_id")

  @@id([movieId, direcotrId])
  @@map("movie_director")
}

model LanguagesOnMovies {
  movie      Movie    @relation(fields: [movieId], references: [id])
  movieId    Int      @map("movie_id")
  language   Language @relation(fields: [languageId], references: [id])
  languageId Int      @map("language_id")

  @@id([movieId, languageId])
  @@map("movie_language")
}
