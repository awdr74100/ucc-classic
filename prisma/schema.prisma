// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  email          String          @unique @db.VarChar(254)
  password       String
  profile        Profile?
  roles          RolesOnUsers[]
  oauthProviders OAuthProvider[]

  @@map("user")
}

model Profile {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int      @unique @map("user_id")
  firstName   String   @map("first_name") @db.VarChar(16)
  lastName    String   @map("last_name") @db.VarChar(16)
  phoneNumber String   @map("phone_number") @db.VarChar(10)
  dateOfBirth DateTime @map("date_of_birth") @db.Date
  avatarURL   String   @map("avatar_url")

  @@map("profile")
}

model Role {
  id    Int            @id @default(autoincrement())
  name  String         @unique @db.VarChar(16)
  users RolesOnUsers[]

  @@map("role")
}

model RolesOnUsers {
  user       User     @relation(fields: [userId], references: [id])
  userId     Int      @map("user_id")
  role       Role     @relation(fields: [roleId], references: [id])
  roleId     Int      @map("role_id")
  assignedAt DateTime @default(now()) @map("assigned_at") @db.Timestamp(3)
  assignedBy String   @map("assigned_by") @db.VarChar(16)

  @@id([userId, roleId])
  @@map("user_role")
}

model OAuthProvider {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@map("oauth_provider")
}
